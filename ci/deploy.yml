steps:
- pwsh: |
    ci/pwsh/windeployqt.ps1

    mv bin\qView.exe "bin\qView$(nightlyString)$(buildNumString).exe"

    if ($env:nightlyString -ne '-nightly') {
          ci/pwsh/innomake.ps1
    }
  condition: and(succeeded(), ne( variables['skipDeploy'], 'true' ), eq( variables['Agent.OS'], 'Windows_NT' ))
  displayName: 'Run windeployqt'

- script: |
    if [ $(nightlyString) == -nightly ]; then
          VERSION=$(Build.BuildNumber)
    else
          VERSION=$(sed -n 's/[^0-9.]*//g;2p' qView.pro)
    fi
    
    cd bin
    
    macdeployqt bin/qView.app
    if [ $(nightlyString) == -nightly ]; then
        mv qView.app 'qView$(nightlyString)$(buildNumString).app'
        macdeployqt *.app -dmg
    else
        brew install create-dmg
        create-dmg --volname "qView $VERSION" --window-size 660 400 --icon-size 160 --icon "qView.app" 180 170 --hide-extension qView.app --app-drop-link 480 170 "qView-$VERSION.dmg" "qView.app"
    fi

    rm -r *.app
  condition: and(succeeded(), ne( variables['skipDeploy'], 'true' ), eq( variables['Agent.OS'], 'Darwin' ))
  displayName: 'Run macdeployqt'

- script: |
    if [ $(nightlyString) == -nightly ]; then
          VERSION=$(nightlyString)
    else
          VERSION=$(sed -n 's/[^0-9.]*//g;2p' qView.pro)
    fi
    echo VERSION was set to $VERSION
    if [[ '$(extra_plugins_maybe)' == *"-extra-plugins"* ]]; then
          PLUGINS=$(extra_plugins_maybe)
    fi

    wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
    chmod a+x linuxdeployqt-continuous-x86_64.AppImage

    mkdir -p bin/appdir/usr
    make install INSTALL_ROOT=bin/appdir
    cd bin
    rm qview
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/
    ../linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/com.interversehq.qView.desktop -appimage -updateinformation="gh-releases-zsync|jurplel|qView|latest|qView-*x86_64.AppImage.zsync" $PLUGINS
    mv *.AppImage qView$(nightlyString)$(buildNumString)-x86_64.AppImage
    rm -r appdir
  condition: and(succeeded(), ne( variables['skipDeploy'], 'true' ), eq( variables['Agent.OS'], 'Linux' ))
  displayName: 'Run linuxdeployqt'
